function [KernelV]=Tesseroid_IntegralkernelV(R2,R1,FaiI,LamdaI,r,fai,lamda)

h2=r-R2;
hRatio2=h2/r;
h1=r-R1;
hRatio1=h1/r;

R2=1-hRatio2;
R1=1-hRatio1;
Phi=atan2(sqrt((cosd(FaiI).*sind(LamdaI-lamda)).^2+(cosd(fai).*sind(FaiI)-sind(fai).*cosd(FaiI).*cosd(LamdaI-lamda)).^2),...
    sind(fai).*sind(FaiI)+cosd(fai).*cosd(FaiI).*cosd(LamdaI-lamda));

l2pow1=(2.*(2.*sin(Phi/2).^2).*(1-hRatio2)+hRatio2.^2).^(0.5);
l1pow1=(2.*(2.*sin(Phi/2).^2).*(1-hRatio1)+hRatio1.^2).^(0.5);

KernelV=0.5.*cosd(FaiI).*( ...
    (3.*cos(Phi)+R2).*l2pow1-(3.*cos(Phi)+R1).*l1pow1+ ...
    (1-3.*cos(Phi).^2).*log((cos(Phi)-R2+l2pow1)./(cos(Phi)-R1+l1pow1)));

Index1=Phi<(pi/2-acos(1e-5));
Index2=Phi>(pi/2+acos(1e-5));

if R2<1

    KernelV(Index1)=-0.5.*cosd(FaiI(Index1))*(...
        2.*R2+R2.^2-...
        2.*R1-R1.^2+...
        2.*log((R2-1)./(R1-1)));

else
    if R1<1

        KernelV(Index1)=0.5.*cosd(FaiI(Index1))*(...
            2.*R2+R2.^2+...
            2.*R1+R1.^2+...
            4.*log(r)+...
            2.*log((1-R1).*(R2-1)));

    else
        KernelV(Index1)=0.5.*cosd(FaiI(Index1))*(...
        2.*R2+R2.^2-...
        2.*R1-R1.^2+...
        2.*log((R2-1)./(R1-1)));
    end
end

KernelV(Index2)=0.5.*cosd(FaiI(Index2))*(...
    -2.*R2+R2.^2+...
    2.*R1-R1.^2+...
    2.*log((R2+1)./(R1+1)));

end