function [KernelVzz]=Tesseroid_IntegralkernelVzz(R2,R1,FaiI,LamdaI,r,fai,lamda)

h2=r-R2;
hRatio2=h2/r;
h1=r-R1;
hRatio1=h1/r;

R2=1-hRatio2;
R1=1-hRatio1;
Phi=atan2(sqrt((cosd(FaiI).*sind(LamdaI-lamda)).^2+(cosd(fai).*sind(FaiI)-sind(fai).*cosd(FaiI).*cosd(LamdaI-lamda)).^2),...
    sind(fai).*sind(FaiI)+cosd(fai).*cosd(FaiI).*cosd(LamdaI-lamda));

l2pow1=(2.*(2.*sin(Phi/2).^2).*(1-hRatio2)+hRatio2.^2).^(0.5);
l1pow1=(2.*(2.*sin(Phi/2).^2).*(1-hRatio1)+hRatio1.^2).^(0.5);

l2pow3=(2.*(2.*sin(Phi/2).^2).*(1-hRatio2)+hRatio2.^2).^(1.5);
l1pow3=(2.*(2.*sin(Phi/2).^2).*(1-hRatio1)+hRatio1.^2).^(1.5);

KernelVzz=cosd(FaiI).*(...
    3.*cos(Phi).*((l1pow3-l2pow3)./(l2pow3.*l1pow3))+...
    (-5-6.*cos(2.*Phi)).*((R2.*l1pow3-R1.*l2pow3)./(l2pow3.*l1pow3))+...
    2.*cos(Phi).*(4+3.*cos(2.*Phi)).*((R2.^2.*l1pow3-R1.^2.*l2pow3)./(l2pow3.*l1pow3))+...
    2.*(-1-2.*cos(2.*Phi)).*((R2.^3.*l1pow3-R1.^3.*l2pow3)./(l2pow3.*l1pow3))+...
    (1-3.*cos(Phi).^2).*log((cos(Phi)-R2+l2pow1)./(cos(Phi)-R1+l1pow1)));

Index1=Phi<(pi/2-acos(1e-5));
Index2=Phi>(pi/2+acos(1e-5));

if R2<1
    KernelVzz(Index1)=-2*cosd(FaiI(Index1))*(...
        ((3-4*R2)/(2*(1-R2)^2))- ...
        ((3-4*R1)/(2*(1-R1)^2))+ ...
        log((1-R2)/(1-R1)));
else
    if R1<1
        KernelVzz(Index1)=2*cosd(FaiI(Index1))*(...
            ((3-4*R2)/(2*(1-R2)^2))+ ...
            ((3-4*R1)/(2*(1-R1)^2))+ ...
            2*log(r)+ ...
            log((R2-1)*(1-R1)));
    else
        KernelVzz(Index1)=2*cosd(FaiI(Index1))*(...
            ((3-4*R2)/(2*(1-R2)^2))- ...
            ((3-4*R1)/(2*(1-R1)^2))+ ...
            log((R2-1)/(R1-1)));
    end
end

KernelVzz(Index2)=2*cosd(FaiI(Index2))*(...
    ((3+4*R2)/(2*(1+R2)^2))- ...
    ((3+4*R1)/(2*(1+R1)^2))+ ...
    log((1+R2)/(1+R1)));

end